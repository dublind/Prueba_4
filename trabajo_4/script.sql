CREATE TABLE usuarios_barber (
    rut VARCHAR2(12) PRIMARY KEY,     
    nombre VARCHAR2(30) NOT NULL,         
    segundo_nombre VARCHAR2(30),           
    apellido_p VARCHAR2(30) NOT NULL,      
    apellido_m VARCHAR2(30) NOT NULL,    
    clave VARCHAR2(25) NOT NULL          
);
SELECT * FROM usuarios_barber;
CREATE TABLE colaboradores (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY (START WITH 1000 INCREMENT BY 1) PRIMARY KEY,
    nombre VARCHAR2(50) UNIQUE NOT NULL,
    clave VARCHAR2(100) NOT NULL
);

CREATE TABLE horarios (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY (START WITH 2000 INCREMENT BY 1) PRIMARY KEY,
    colaborador VARCHAR2(50) NOT NULL,
    mes NUMBER NOT NULL,
    dia NUMBER NOT NULL,
    hora VARCHAR2(5) NOT NULL,
    rut_cliente VARCHAR2(20) NOT NULL,
    nombre_cliente VARCHAR2(100) NOT NULL,
    CONSTRAINT fk_horarios_colaborador FOREIGN KEY (colaborador) REFERENCES colaboradores(nombre),
    CONSTRAINT fk_horarios_usuario FOREIGN KEY (rut_cliente) REFERENCES usuarios_barber(rut),
    CONSTRAINT unique_horario UNIQUE (colaborador, mes, dia, hora)
);
SELECT * FROM horarios;

CREATE TABLE pagos (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY (START WITH 3000 INCREMENT BY 1) PRIMARY KEY,
    rut VARCHAR2(20) NOT NULL,
    nombre VARCHAR2(100) NOT NULL,
    boleta VARCHAR2(10) NOT NULL,
    tipo_pago VARCHAR2(20) CHECK (tipo_pago IN ('Efectivo', 'Tarjeta')) NOT NULL,
    fecha_pago TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_pagos_usuario FOREIGN KEY (rut) REFERENCES usuarios_barber(rut)
);

CREATE TABLE atencion_clientes (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY (START WITH 4000 INCREMENT BY 1) PRIMARY KEY,
    correo VARCHAR2(100) NOT NULL,
    nombre VARCHAR2(100) NOT NULL,
    fecha_contacto TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Insertar datos iniciales
INSERT INTO colaboradores (nombre, clave) VALUES ('Tomas', '1234');
INSERT INTO colaboradores (nombre, clave) VALUES ('Agustin', '5678');

COMMIT;

